
>nextValue()

>nextValue()

>setValue(V[]value)

>enableProbability(booleanenable)

>classify(Stringtext)
0
1

>classify(Documentdocument)
0
1

>train(StringfolderPath,StringcharsetName)
2
3

>train(Map<String,String[]>trainingDataSet)
4
5
6
7
8
9
10
8
11
12
3

>train(StringfolderPath)
3

>predict(Documentdocument)
13
14
15

>label(Documentdocument)
13
14

>nextWords(intn,Stringmsg)
16

>nextWord()
17
18
19

>getTargetVector()

>execute()
20
21
22
23
24
25
26

>setTokenizer(ITokenizertokenizer)

>convert(Stringcategory,Stringtext)
27

>getTokenizer()

>getCatalog()

>getLexicon()

>load(StringfolderPath,StringcharsetName)
28

>load(StringfolderPath)
28

>isTestingDataSet()

>load(StringfolderPath,StringcharsetName,doublepercentage)
29
30
31
32
30
31
33
4
34
35
36
8
37
38
36
39
8
11
8
12
40
41
42

>load(StringfolderPath,doublerate)

>add(Map<String,String[]>testingDataSet)
43
9
38
7
44
45

>parse(Stringsentence)
46
47
48
49

>getSegment()

>setSegment(Segmentsegment)

>getDeprelTranslator()

>setDeprelTranslator(Map<String,String>deprelTranslator)

>setDeprelTranslater(StringdeprelTranslatorPath)
50
51
52
53
54
55
56

>enableDeprelTranslator(booleanenable)

>compareTo(AbstractInexactActiono)
57

>equals(Objectobj)

>name()

>rel()

>localUsage()

>paramDesc(Stringparam,Stringdesc)

>usage()
58
58
58
58
58
58
58
58
58
58
58
59

>argPos(Stringparam,String[]args)
60

>argPos(Stringparam,String[]args,booleancheckArgNum)
61
30

>setConfig(String[]args,Configconfig)
60
62
63
60
64
60
65
63
66
67
60
67
68
60
69
63
60
70
68
60
71
63
60
72
63
60
73
63
60
74
63
60
75
63

>vector(Kkey)
76

>similarity(Kwhat,Kwith)
76
76
77

>nearest(Kkey,intsize)
76
78
79

>nearest(Kkey,Vectorvector,intsize)

>compare(Map.Entry<K,Float>o1,Map.Entry<K,Float>o2)
80
57
81
82
7
83
84
7
9
85
86

>nearest(Vectorvector,intsize)

>compare(Map.Entry<K,Float>o1,Map.Entry<K,Float>o2)
80
57
81
82
84
7
9
85
86

>nearest(Vectorvector)
79

>nearest(Kkey)
79

>queryNearest(Stringquery,intsize)
87
78
79
88
78

>query(Stringquery)

>size()
89

>dimension()
90
91
92
93
41

>remove(Kkey)
94

>make_shift()

>make_left_arc(finalintrel)

>make_right_arc(finalintrel)

>is_shift(finalActionact)
95

>is_left_arc(finalActionact,int[]deprel)
95
96

>is_right_arc(finalActionact,int[]deprel)
95
96

>get_oracle_actions(List<Integer>heads,List<Integer>deprels,List<Action>actions)
97
98
99
100
100
101

>get_oracle_actions_travel(introot,List<Integer>heads,List<Integer>deprels,List<List<Integer>>tree,List<Action>actions)
100
102
103
101
103
104
105
102
103
101
104
106
107
103
104
108
107

>get_oracle_actions2(Dependencyinstance,List<Action>actions)
109

>get_oracle_actions2(List<Integer>heads,List<Integer>deprels,List<Action>actions)
98
97
110
111
112

>get_oracle_actions_onestep(List<Integer>heads,List<Integer>deprels,List<Integer>sigma,int[]beta,List<Integer>output,List<Action>actions)
111
113
111
111
113
111
97
99
114
99
104
108
107
115
116
111
117
111
99
104
106
107
115
116
111
97
104
105
118

>testAdjust()
119
120

>handle(Filefile)
121
122
123
124
124
124
124
124
124
124
124
124
124
124
124
124
124
124
124
124
124
124
123
125
126
127

>addW(Stringtext,Stringc)
128
128

>testPlay()
129

>handle(Documentdocument)
130
131
83
132
133
134

>testAdjustNGram()
51
52
135
53
53
63
136
137
138
125
139
126

>testRemoveLabelD()
140
141
135
53
83
142
143
144
7
9
145
146
136
147
148
9
9
149

<Api
0 predict
1 CollectionUtility.max
2 dataSet.load
3 train
4 logger.start
5 trainingDataSet.size
6 trainingDataSet.entrySet
7 entry.getKey
8 logger.out
9 entry.getValue
10 dataSet.add
11 MathUtility.percentage
12 logger.finish
13 getModel
14 categorize
15 scoreMap.put
16 nextWord
17 scanner.next
18 word.length
19 word.equals
20 vectorsReader.readVectorFile
21 vectorsReader.getNumWords
22 vectorsReader.getSize
23 getTargetVector
24 vectorsReader.getMatrixElement
25 vectorsReader.getWord
26 scanner.close
27 tokenizer.segment
28 load
29 root.exists
30 String.format
31 root.getAbsolutePath
32 root.isDirectory
33 root.listFiles
34 folder.isFile
35 folder.listFiles
36 folder.getName
37 Math.ceil
38 add
39 TextProcessUtility.readTxt
40 getCatalog
41 .size
42 size
43 testingDataSet.entrySet
44 HanLP.newSegment
45 .enablePartOfSpeechTagging
46 parse
47 segment.seg
48 sentence.toCharArray
49 deprelTranslater.get
50 GlobalObjectPool.get
51 iterator.hasNext
52 iterator.next
53 .split
54 deprelTranslater.put
55 deprelTranslater.size
56 GlobalObjectPool.put
57 .compareTo
58 paramDesc
59 localUsage
60 argPos
61 param.equals
62 config.setLayer1Size
63 Integer.parseInt
64 config.setOutputFile
65 config.setUseContinuousBagOfWords
66 config.useContinuousBagOfWords
67 config.setAlpha
68 Float.parseFloat
69 config.setWindow
70 config.setSample
71 config.setUseHierarchicalSoftmax
72 config.setNegative
73 config.setNumThreads
74 config.setIter
75 config.setMinCount
76 storage.get
77 vectorWhat.cosineForUnitVector
78 Collections.emptyList
79 nearest
80 o1.getValue
81 o2.getValue
82 storage.entrySet
83 .equals
84 maxHeap.add
85 .cosineForUnitVector
86 maxHeap.toList
87 query.length
88 query
89 storage.size
90 storage.isEmpty
91 storage.values
92 .iterator
93 .next
94 storage.remove
95 act.name
96 act.rel
97 heads.size
98 actions.clear
99 heads.get
100 tree.get
101 get_oracle_actions_travel
102 children.size
103 children.get
104 actions.add
105 ActionFactory.make_shift
106 ActionFactory.make_right_arc
107 deprels.get
108 ActionFactory.make_left_arc
109 get_oracle_actions2
110 output.add
111 sigma.size
112 get_oracle_actions_onestep
113 sigma.get
114 output.get
115 output.set
116 sigma.remove
117 sigma.set
118 sigma.add
119 FolderWalker.open
120 handle
121 IOUtil.readTxt
122 file.getPath
123 text.length
124 addW
125 bw.write
126 bw.close
127 e.printStackTrace
128 text.replaceAll
129 CorpusLoader.walk
130 document.getComplexSentenceList
131 word.getLabel
132 tfDictionary.add
133 word.toString
134 tfDictionary.saveTxtTo
135 line.split
136 CoreDictionary.get
137 first.length
138 second.length
139 bw.newLine
140 lineIterator.hasNext
141 lineIterator.next
142 nameFollowers.add
143 DictionaryMaker.load
144 dictionary.entrySet
145 .getFrequency
146 key.length
147 nameFollowers.contains
148 attribute.hasNatureStartsWith
149 dictionary.saveTxtTo
