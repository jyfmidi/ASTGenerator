digraph G {
00[label="compilationUnit\n Bud1%@@@@E%DSDB@@@ "]
01[label="compilationUnit\n digraphG{00[label=\"compilationUnit\n Bud1%@@@@E%DSDB@@@ \"]} "]
02[label="compilationUnit\n digraphG{00[label=\"compilationUnit\n Bud1%@@@@E%DSDB@@@ \"]01[label=\"compilationUnit\n digraphG{00[label=\\"compilationUnit\n Bud1%@@@@E%DSDB@@@ \\"]} \"]-10->01} "]
03[label="compilationUnit\n <EOF> "]
04[label="compilationUnit\n <EOF> "]
05[label="compilationUnit\n digraphG{00[label=\"compilationUnit\n Bud1%@@@@E%DSDB@@@ \"]01[label=\"compilationUnit\n digraphG{00[label=\\"compilationUnit\n Bud1%@@@@E%DSDB@@@ \\"]} \"]02[label=\"compilationUnit\n digraphG{00[label=\\"compilationUnit\n Bud1%@@@@E%DSDB@@@ \\"]01[label=\\"compilationUnit\n digraphG{00[label=\\\"compilationUnitnBud1%@@@@E%DSDB@@@\"]} \\"]-10->01} \"]03[label=\"compilationUnit\n <EOF> \"]04[label=\"compilationUnit\n <EOF> \"]-10->01-10->02-10->03-10->04} "]
06[label="compilationUnit\n <EOF> "]
07[label="compilationUnit\n packagecom.hankcs.hanlp.collection.trie.bintrie;publicclass_EmptyValueArray<V>extends_ValueArray<V>{public_EmptyValueArray(){}@OverridepublicVnextValue(){returnnull;}}<EOF> "]
18[label="packageDeclaration\n packagecom.hankcs.hanlp.collection.trie.bintrie; "]
29[label="packageName\n com.hankcs.hanlp.collection.trie.bintrie "]
310[label="packageName\n com.hankcs.hanlp.collection.trie "]
411[label="packageName\n com.hankcs.hanlp.collection "]
512[label="packageName\n com.hankcs.hanlp "]
613[label="packageName\n com.hankcs "]
714[label="packageName\n com "]
115[label="normalClassDeclaration\n publicclass_EmptyValueArray<V>extends_ValueArray<V>{public_EmptyValueArray(){}@OverridepublicVnextValue(){returnnull;}} "]
216[label="classModifier\n public "]
217[label="typeParameters\n <V> "]
318[label="typeParameter\n V "]
219[label="superclass\n extends_ValueArray<V> "]
320[label="classType\n _ValueArray<V> "]
421[label="typeArguments\n <V> "]
522[label="classType_lfno_classOrInterfaceType\n V "]
223[label="classBody\n {public_EmptyValueArray(){}@OverridepublicVnextValue(){returnnull;}} "]
324[label="constructorDeclaration\n public_EmptyValueArray(){} "]
425[label="constructorModifier\n public "]
426[label="constructorDeclarator\n _EmptyValueArray() "]
527[label="simpleTypeName\n _EmptyValueArray "]
428[label="constructorBody\n {} "]
329[label="methodDeclaration\n @OverridepublicVnextValue(){returnnull;} "]
430[label="markerAnnotation\n @Override "]
531[label="typeName\n Override "]
432[label="methodModifier\n public "]
433[label="methodHeader\n VnextValue() "]
534[label="unannClassType_lfno_unannClassOrInterfaceType\n V "]
535[label="methodDeclarator\n nextValue() "]
436[label="block\n {returnnull;} "]
537[label="returnStatement\n returnnull; "]
638[label="literal\n null "]
-10->01
-10->02
-10->03
-10->04
-10->05
-10->06
-10->07
07->18
18->29
29->310
310->411
411->512
512->613
613->714
07->115
115->216
115->217
217->318
115->219
219->320
320->421
421->522
115->223
223->324
324->425
324->426
426->527
324->428
223->329
329->430
430->531
329->432
329->433
433->534
433->535
329->436
436->537
537->638
}
