
>nextValue()

>nextValue()

>setValue(V[]value)

>enableProbability(booleanenable)

>classify(Stringtext)
predict
CollectionUtility.max

>classify(Documentdocument)
predict
CollectionUtility.max

>train(StringfolderPath,StringcharsetName)
dataSet.load
train

>train(Map<String,String[]>trainingDataSet)
logger.start
trainingDataSet.size
trainingDataSet.entrySet
entry.getKey
logger.out
entry.getValue
dataSet.add
logger.out
MathUtility.percentage
logger.finish
train

>train(StringfolderPath)
train

>predict(Documentdocument)
getModel
categorize
scoreMap.put

>label(Documentdocument)
getModel
categorize

>nextWords(intn,Stringmsg)
nextWord

>nextWord()
scanner.next
word.length
word.equals

>getTargetVector()

>execute()
vectorsReader.readVectorFile
vectorsReader.getNumWords
vectorsReader.getSize
getTargetVector
vectorsReader.getMatrixElement
vectorsReader.getWord
scanner.close
